/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

package sortcompare;

/**
 *
 * @author Aldemar
 */
public class Main {

    /**
     * @param args the command line arguments
     */
    
    public int [] generateArray(int c){
        int n = c;
        int a[] = new int[n];
        for(int i=0;i<n;i++){
            a[i] = (int)(Math.random()*n);
        }
        return a;
    }

    public static void main(String[] args) {
        // TODO code application logic here
        Main main = new Main();
        InsertionSort insertionSort = new InsertionSort();
        MergeSort mergeSort = new MergeSort();
        QuickSort qSort = new QuickSort();
        RandomQuickSort rqSort = new RandomQuickSort();
        ShellSort ssort = new ShellSort();
        StupidSort stsort = new StupidSort();
        int TOTAL_TESTS = 100;
        int MAX_NUMBER_OF_DATA=1000;
        int delta = (int)(MAX_NUMBER_OF_DATA/TOTAL_TESTS);
        long stat[][] = new long[TOTAL_TESTS][7];
        int currentSize = 0;
        System.out.println("N; INSERTION; MERGE; QSORT; QSORT_RANDOM;SHELL_SORT;STUPID");
        for(int i = 1; i<=TOTAL_TESTS;i++){
            currentSize+=delta;
            int a1[] = main.generateArray(currentSize);

            int a2[] = new int[a1.length];
            int a3[] = new int[a1.length];
            int a4[] = new int[a1.length];
            int a5[] = new int[a1.length];
            int a6[] = new int[a1.length];

            for(int j=0;j<a1.length;j++){
                a2[j] = a1[j];
            }
            for(int j=0;j<a1.length;j++){
                a3[j] = a1[j];
            }
            for(int j=0;j<a1.length;j++){
                a4[j] = a1[j];
            }
            for(int j=0;j<a1.length;j++){
                a5[j] = a1[j];
            }
            for(int j=0;j<a1.length;j++){
                a6[j] = a6[j];
            }
      
            //insertionSort.sort(a1);
            mergeSort.sort(a2);
            qSort.sort(a3);
            rqSort.sort(a4);
            ssort.sort(a5);
            stsort.sort(a6);
            stat[i-1][0] = a1.length;
            stat[i-1][1] = insertionSort.getExecutionTime();
            stat[i-1][2] = mergeSort.getExecutionTime();
            stat[i-1][3] = qSort.getExecutionTime();
            stat[i-1][4] = rqSort.getExecutionTime();
            stat[i-1][5] = ssort.getExecutionTime();
            stat[i-1][6] = stsort.getExecutionTime();
//            stat[i-1][1] = insertionSort.getCountCompares();
//            stat[i-1][2] = mergeSort.getCountCompares();
//            stat[i-1][3] = qSort.getCountCompares();
//            stat[i-1][4] = rqSort.getCountCompares();
//            stat[i-1][5] = ssort.getCountCompares();
//            stat[i-1][6] = stsort.getCountCompares();
//            for(int j=0;j<a1.length;j++){
//                System.out.print(a1[j]+";");
//            }
//            System.out.println();
//            for(int j=0;j<a1.length;j++){
//                System.out.print(a2[j]+";");
//            }
//            System.out.println();
//            for(int j=0;j<a1.length;j++){
//                System.out.print(a3[j]+";");
//            }
//            System.out.println();
//            for(int j=0;j<a1.length;j++){
//                System.out.print(a4[j]+";");
//            }
//            System.out.println();
//            for(int j=0;j<a1.length;j++){
//                System.out.print(a5[j]+";");
//            }
//            System.out.println();
            
            System.out.println(stat[i-1][0]+";"+stat[i-1][1]+";"+stat[i-1][2]+";"+stat[i-1][3]+";"+stat[i-1][4]+";"+stat[i-1][5]+";"+stat[i-1][6]);
        }
        
        System.exit(0);
    }

}
/*

 N; INSERTION; MERGE; QSORT; QSORT_RANDOM
10000;104874013;6736890;6977423;5636401
20000;411722230;8925646;3350845;5278534
30000;997686927;12234446;5411512;7728846
40000;1895199040;16029691;6607334;10371779
50000;2882390010;22082136;9501557;13742668
60000;4446983765;24349115;10355157;16172936
70000;6270168974;46118851;12408002;19221158
80000;8060042268;32940360;14487735;22310447
90000;10557167252;49496095;16682358;24496759
100000;12875592569;42760183;18639869;28226492
110000;15985815585;47239383;20337291;31195515
120000;19618199869;65898320;22677603;34799605
130000;22113521342;55108540;25366003;36304894
140000;25494683682;60554763;25843159;39411783
150000;30376331280;81809210;28129692;42626227
160000;33972612092;69666187;31033693;46087073
170000;38562128497;75987521;32478360;48534451
180000;44080872219;81494366;36990316;53886318
190000;49610276167;82885255;37907961;56617740
200000;55002652362;92112057;41696361;60497564
210000;59612338858;94451879;41986760;62967430
220000;65655997271;98657302;44263517;64204808
230000;73089531281;114323259;43423605;70129164
240000;79091746088;106889213;47896451;72692409
250000;86319495983;111640726;51886273;74342898
260000;93877007832;116722726;51794851;76643610
270000;101778869591;122969260;55605251;79943611
280000;109962602231;125208371;56959963;84176899
290000;118248027682;131096061;57191207;88811078
300000;126921689139;136011351;62938586;90319300
310000;136432801236;155797175;63469519;93892101
320000;144970713876;146724374;62906319;95516190
330000;155241313491;150254641;65133208;98433879
340000;165087553585;155086331;71725875;102116191
350000;183929654467;162374199;75063031;107954991
360000;194726073216;168120599;74498365;112648325
370000;206336918868;183242913;79086099;112876148
380000;208722801571;172105533;78562988;115363615
390000;222925308174;180820957;91795745;119745527
400000;232538272951;187110024;83597566;123076327
410000;242370422777;191340868;87227566;123643927
420000;255349671537;208771715;90528544;128138772
430000;274931489267;202590204;92652279;133968284
440000;291689825174;206610338;92610723;136949040
450000;297485156843;209458604;93130901;137057084
460000;306026791883;225919984;101830679;138157573
470000;319455125232;219707673;98802991;141445351
480000;333435046074;222701139;100312680;148380730
490000;347009173442;243551276;106775302;153328775
500000;362830354696;231705007;112902548;153198242
510000;377347019384;234880830;106458013;158158998
520000;391663233246;239625497;110453214;160919265
530000;407898714641;261028077;114765703;169944155
540000;424604918851;248794121;115238948;165182866
550000;439838311852;253871721;115930237;171490511
560000;455595831453;261639678;119878015;171273933
570000;472563184008;280103547;120218282;180831223
580000;490104948813;268495856;124788904;177283356
590000;513043667282;275048924;128083038;188862202
600000;534333749541;295501593;130189173;189730469
610000;558209850973;281268569;130431172;199614336
620000;560364375780;288547148;134220550;195449002
630000;579992705916;311475062;137625662;196530913
640000;599492016304;294799548;135409040;197857759
650000;617575989756;301325727;143545619;203741048
660000;636872969050;322729775;137871084;215513494
670000;660617067044;313177862;146488241;213111582
680000;693254473055;317675151;155677397;221957050
690000;724882032982;338313599;158590687;236688741
700000;767800822032;339829643;151144908;222032828
710000;742772927076;329028131;152672197;226572162
720000;748584810080;334230887;154770019;223288784
730000;771508477614;355599734;159009175;230024696
740000;3692441893942;458185258;282971369;413801963
750000;905651450114;354791601;161890199;238870652
760000;1053190528405;414757742;194049313;265037945
770000;1025899660850;426466632;184912957;269531323
780000;976773486435;375902803;184757979;268284656
790000;1029654702972;488670907;173387400;255306610
800000;1077255098972;555170560;197682736;264487456
810000;1058793963339;439922812;183487357;271686345
820000;1070432250816;399770362;189859536;275402880
830000;1135613068071;409733429;184873845;276817724
840000;1119271565241;420034320;181425223;320991774
850000;1129100462000;427247876;215782872;312701684
860000;1149041514843;438858989;220222961;319655641
870000;1181839017319;436117789;189169712;272872879
880000;1181188837548;412145608;193118469;280619325
890000;1209272057203;460886859;240868253;284528970
900000;1260830932772;438529478;217219228;335899954
910000;1302797051302;465212548;253818921;337484932
920000;1341794761275;496587486;228403540;334389776
930000;1360151142184;441840234;206483715;291859860
940000;1383921176714;456990414;205355360;304815905
950000;1410724504162;451445435;209827226;332744664
960000;1435929736741;501774597;210771271;302157327



 */